[{"content":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nAPI Management là gì [API Management] cung cấp 1 công cụ design API bằng giao diện thân thiện\nCác tính năng chính:\n  Design API\n  Generate Design\n  Generate Code\n  Generate UT\n  Quick Start Mở app [acoda], chọn project, vào mục [codadevs], chọn [API Management]\nClick button [New] và chọn [Create folder] để tạo folder, chọn [Create file] để tạo mới 1 api design, 1 api design có thể gồm nhiều api\nThêm xoá API, switch giữa các API\nTab [API Infor] fill các thông tin cơ bản của 1 API\n  API Type\n  API Path\n  API Descreption\n  Tab [Request/Response] design các field request/response của API. Có thể chọn các field có sẵn ở table layout hoặc tạo mới. Chọn từ table layout thì sẽ kế thừa được các thuộc tính của field như: tên, comment, type, length, \u0026hellip;\nSupport các validate đơn giản cho các field\nTab [UT Management]\n  Generate các case validation đơn giản: data null, data empty, data max length\n  Generate data test cho các case validation đơn giản (datatest được gen theo nguyên tắc giống màn [Datatest Management], tham khảo thêm tại: // TODO)\n  Giao diện quản lý test case UT: thêm, sửa, xoá\n  Tab [Sample Request/Response]\nGenerate/edit data request/response sample\nChức năng generate Design Click button [Generate]\nChọn type [Design]\nChọn template là [API Design Template]\nTham khảo các template hữu ích khác tại: // TODO\nTham khảo cách customize template tại: // TODO\nChức năng generate Code Click button [Generate]\nChọn type [Code]\nChọn template là [Spring API Template]\nTham khảo các template hữu ích khác tại: // TODO\nTham khảo cách customize template tại: // TODO\nTham khảo gen code sql, repository tại: // TODO\n","permalink":"https://acoda-82b2c.web.app/acoda/api-design/","summary":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nAPI Management là gì [API Management] cung cấp 1 công cụ design API bằng giao diện thân thiện\nCác tính năng chính:\n  Design API\n  Generate Design\n  Generate Code\n  Generate UT\n  Quick Start Mở app [acoda], chọn project, vào mục [codadevs], chọn [API Management]","title":"API Design"},{"content":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nDatatest Management là gì? Datatest Management là công cụ quản lý và gen datatest cho database.\nCác tính năng chính:\n Generate data: data được gen theo cấu trúc của database Generate câu lệnh sql insert Export data dưới dạng excel, csv  Cách sử dụng [Datatest Management] Mở app [acoda], chọn project, vào mục [codadb], chọn [Datatest Management]\nClick button [New] và chọn [Create folder] để tạo folder, chọn [Create file] để tạo testdata\n[Datatest Management] quản lý data dưới dạng cây thư mục\nBest practice: cấu trúc thư mục theo level: màn hình \u0026gt; testcase\nChức năng generate datatest Chọn loại data [Input] or [Output]\nChọn table muốn gen\nChọn số lượng data mong muốn\nClick button [Add]\nData được generate random sẽ được hiển thị như hình dưới\nClick [Save] để save data, data sẽ được save dưới dạng csv vào folder tương ứng trong project workspace\nVới mỗi table, có thể clone or delete data của table đó bằng cách click vào button [Clone], [Delete]\nTìm hiểu chi tiết nguyên tắc generate data tại: // TODO\nChức năng generate insert sql Click button [Export] tương ứng với mỗi table\nChọn loại [Code]\nChọn template mong muốn, trong trường hợp này là [Datatest Mysql Insert SQL Template]\nTìm hiểu thêm về template tại: // TODO\nClick button [Generate]\nCâu lệnh insert sẽ được hiển thị như dưới:\nChức năng export excel Click button [Export] ở trên header\nChọn loại [Design]\nChọn template mong muốn, trong trường hợp này là [Datatest Template]\nTìm hiểu thêm về template tại: // TODO\nClick button [Generate]\nFile output được lưu vào folder tương ứng trong project workspace\nNội dung file excel\nLàm sao để data có nghĩa Generate data theo cách trên thì data được generate random, dẫn tới data rác, không có ý nghĩa, không phù hợp với nghiệp vụ.\n[Datasets Management] được sinh ra để giải quyết vấn đề trên.\n[Datasets Management] là gì? Datasets là tập các data được tạo bởi người dùng để phù hợp với dự án, nghiệp vụ và có ý nghĩa. Lúc này khi thực hiện generate data thì data được gen ra bởi [Datatest Management] sẽ là các data trong tập datasets kia, vì vậy sẽ tránh được việc data bị vô nghĩa.\nConfig datasets như thế nào? Tạo dataset Mở app [acoda], chọn project, vào mục [codadb], chọn [Datasets Management]\nClick [New Dataset]\nĐiền tên dataset\nĐiền dataset\nClick [Save]\nConfig DDL Vào màn [DDL Management], sửa giá trị của cột dataset cho cột tương ứng của table, ví dụ trong trường hợp này là cột privacy của table group\nKết quả ","permalink":"https://acoda-82b2c.web.app/acoda/generate-datatest/","summary":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nDatatest Management là gì? Datatest Management là công cụ quản lý và gen datatest cho database.\nCác tính năng chính:\n Generate data: data được gen theo cấu trúc của database Generate câu lệnh sql insert Export data dưới dạng excel, csv  Cách sử dụng [Datatest Management] Mở app [acoda], chọn project, vào mục [codadb], chọn [Datatest Management]","title":"Generate Datatest"},{"content":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nSpring JPA Entity Template Spring JPA Entity Template là template được sử dụng để generate entity cho các project sử dụng Spring JPA.\nTham khảo các template hữu ích khác tại: // TODO\nTham khảo cách customize template tại: // TODO\nGenerate Spring JPA Entity Mở app [acoda], vào mục [codadevs], chọn [Template Management]\nTìm kiếm template [Spring JPA Entity Template]\nClick button [View]\nClick button [Gen Code]\nChọn ngày gen\nFill đường dẫn folder output\nClick button [Gen Code]\n","permalink":"https://acoda-82b2c.web.app/acoda/generate-spring-jpa-entity/","summary":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nSpring JPA Entity Template Spring JPA Entity Template là template được sử dụng để generate entity cho các project sử dụng Spring JPA.\nTham khảo các template hữu ích khác tại: // TODO\nTham khảo cách customize template tại: // TODO\nGenerate Spring JPA Entity Mở app [acoda], vào mục [codadevs], chọn [Template Management]","title":"Generate Spring Jpa Entity"},{"content":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nSQL Management là gì [SQL Management] cung cấp 1 công cụ một số tiện ích cho việc design SQL\nCác tính năng chính:\n  Format SQL\n  Generate Code\n  Quick Start Mở app [acoda], chọn project, vào mục [codadevs], chọn [SQL Management]\nClick button [New] và chọn [Create folder] để tạo folder, chọn [Create file] để tạo mới\nGiao diện gồm editor hiển thị nội dung câu sql ở bên trái và bên phải là In/Out của câu sql\nCode SQL được auto format sau mỗi 1 phút\nAuto detech In/Out Click button [Extract I/O] trên header, tool sẽ tự động extract In/Out của câu sql và mapping thông tin với table layout để get được các thông tin cơ bản như: comment, type\nNgoài ra cũng có thể add thêm các field trong trường hợp tool không detech được.\nChú ý: tham số truyền vào phải sử dụng cú pháp \u0026quot;:var_name\u0026quot;, ví dụ:\nSELECT count(1) as count, ` group `.group_id FROM ` group ` join group_member on ` group `.group_id = group_member.group_id and ` group `.privacy = \u0026#39;:privacy\u0026#39; where ` group `.group_id = \u0026#39;:groupId\u0026#39; and ` group `.group_name = \u0026#39;:groupName\u0026#39;; Các trường :privacy, :groupId, :groupName là các tham số truyền vào\nGenerate Code Click button [Generate]\nChọn type [Code]\nChọn template là [DotNet API Restfull Dao Template]\nKết quả\nTham khảo các template hữu ích khác tại: // TODO\nTham khảo cách customize template tại: // TODO\n","permalink":"https://acoda-82b2c.web.app/acoda/sql-management/","summary":"Điều kiện Table layout phải được import và quản lý bằng DDL Management.\nCách sử dụng DDL Management để quản lý table layout tham khảo tại: // TODO\nSQL Management là gì [SQL Management] cung cấp 1 công cụ một số tiện ích cho việc design SQL\nCác tính năng chính:\n  Format SQL\n  Generate Code\n  Quick Start Mở app [acoda], chọn project, vào mục [codadevs], chọn [SQL Management]","title":"SQL Management"},{"content":"Download acoda tại link\n","permalink":"https://acoda-82b2c.web.app/acoda/installing/","summary":"Download acoda tại link","title":"Installing"},{"content":"","permalink":"https://acoda-82b2c.web.app/acoda/quick-start/","summary":"","title":"Quick Start"},{"content":"demo\n","permalink":"https://acoda-82b2c.web.app/posts/my-first-post/","summary":"demo","title":"My First Post"}]