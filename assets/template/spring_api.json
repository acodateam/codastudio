{
    "name": "Spring API Template Clone Clone",
    "description": "Spring API Template",
    "tags": [
        "spring",
        "java"
    ],
    "files": [
        {
            "name": "controller",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/controller/{{className name}}Controller.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\n\npackage {{packageName}}.controller;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport javax.validation.Valid;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport {{packageName}}.constant.Constants;\nimport {{packageName}}.service.{{className name}}Service;\n\n/**\n* {{screenDetail.nameJp}}\n*\n* <PRE>\n* <B>作成：</B>\n* <!-- ------------------------------ START OF 作成 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}\n* <!-- ------------------------------ END OF 作成 -->\n* <B>改訂履歴：</B>\n* <!-- ------------------------------------ START OF 改訂履歴 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}、新規作成\n* <!-- ------------------------------------ END OF 改訂履歴 -->\n* </PRE>\n*/\n@RestController\n@RequestMapping(\"/api\")\npublic class {{className name}}Controller {\n\n    /** サービス */\n    @Autowired\n    private {{className name}}Service {{camelcase name}}Service;\n    {{#each apiList}}\n    /**\n    * {{this.description}}\n    */\n    @{{className this.type}}Mapping(\"{{this.path}}\")\n    public {{#if (gtLength this.res.model 0)}}{{this.res.name}}{{else}}ResponseEntity<String>{{/if}} {{camelcase this.path}}(@RequestBody @Valid {{this.req.name}} request) {\n        {{#if (gtLength this.res.model 0)}}return {{/if}}this.{{camelcase ../name}}Service.{{camelcase this.path}}({{this.paramShortStr}});\n        {{#if (equalsLength this.res.model 0)}}return new ResponseEntity<>(Constants.SUCCESS_MSG, HttpStatus.OK);{{/if}}\n    }\n    {{/each}}\n}"
        },
        {
            "name": "service",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/service/{{className name}}Service.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\npackage {{packageName}}.service;\n\nimport org.springframework.stereotype.Component;\n\n/**\n* {{screenDetail.nameJp}}\n*\n* <PRE>\n* <B>作成：</B>\n* <!-- ------------------------------ START OF 作成 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}\n* <!-- ------------------------------ END OF 作成 -->\n* <B>改訂履歴：</B>\n* <!-- ------------------------------------ START OF 改訂履歴 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}、新規作成\n* <!-- ------------------------------------ END OF 改訂履歴 -->\n* </PRE>\n*/\npublic interface {{className name}}Service {\n\n    {{#each apiList}}\n    /**\n    * {{this.description}}\n    */\n    {{#if (gtLength this.res.model 0)}}{{this.res.name}}{{else}}void{{/if}} {{camelcase this.path}}({{this.req.name}} request);\n    {{/each}}\n\n}\n"
        },
        {
            "name": "service impl",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/service/impl/{{className name}}ServiceImpl.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\npackage {{packageName}}.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport {{packageName}}.logic.{{className name}}Logic;\nimport {{packageName}}.service.{{className name}}Service;\nimport lombok.NoArgsConstructor;\n\n/**\n* {{screenDetail.nameJp}}\n*\n* <PRE>\n* <B>作成：</B>\n* <!-- ------------------------------ START OF 作成 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}\n* <!-- ------------------------------ END OF 作成 -->\n* <B>改訂履歴：</B>\n* <!-- ------------------------------------ START OF 改訂履歴 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}、新規作成\n* <!-- ------------------------------------ END OF 改訂履歴 -->\n* </PRE>\n*/\n@Service\npublic class {{className name}}ServiceImpl implements {{className name}}Service {\n\n    /** {{className name}}のロジック */\n    @Autowired\n    private {{className name}}Logic {{camelcase name}}Logic;\n\n    {{#each apiList}}\n    /**\n    * {{this.description}}\n    */\n    @Override\n    public {{#if (gtLength this.res.model 0)}}{{this.res.name}}{{else}}void{{/if}} {{camelcase this.path}}({{this.req.name}} request) {\n        {{#if (gtLength this.res.model 0)}}return {{/if}}this.{{camelcase ../name}}Logic.{{camelcase this.path}}(request);\n    }\n    {{/each}}\n}\n"
        },
        {
            "name": "logic",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/logic/{{className name}}Logic.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\npackage {{packageName}}.logic;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Locale;\nimport org.modelmapper.Converter;\nimport org.modelmapper.ModelMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.MessageSource;\nimport org.springframework.stereotype.Component;\nimport {{packageName}}.dao.{{className name}}Dao;\nimport lombok.NoArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\n\n/**\n* {{screenDetail.nameJp}}\n*\n* <PRE>\n* <B>作成：</B>\n* <!-- ------------------------------ START OF 作成 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}\n* <!-- ------------------------------ END OF 作成 -->\n* <B>改訂履歴：</B>\n* <!-- ------------------------------------ START OF 改訂履歴 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}、新規作成\n* <!-- ------------------------------------ END OF 改訂履歴 -->\n* </PRE>\n*/\n@Slf4j\n@Component\npublic class {{className name}}Logic {\n\n    /** {{name}}のDAO */\n    @Autowired\n    private {{className name}}Dao {{camelcase name}}Dao;\n\n    @Autowired\n    private MessageSource messages;\n\n    {{#each apiList}}\n    /**\n    * {{this.description}}\n    */\n    public {{#if (gtLength this.res.model 0)}}{{this.res.name}}{{else}}void{{/if}} {{camelcase this.path}}({{this.req.name}} request) {\n        {{#if (gtLength this.res.model 0)}}return null;{{/if}}\n    }\n    {{/each}}\n\n}\n"
        },
        {
            "name": "dao",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/dao/{{className name}}Dao.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\npackage {{packageName}}.logic;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Locale;\nimport org.modelmapper.Converter;\nimport org.modelmapper.ModelMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.MessageSource;\nimport org.springframework.stereotype.Component;\nimport {{packageName}}.dao.{{className name}}Dao;\nimport lombok.NoArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\n\n/**\n* {{screenDetail.nameJp}}\n*\n* <PRE>\n* <B>作成：</B>\n* <!-- ------------------------------ START OF 作成 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}\n* <!-- ------------------------------ END OF 作成 -->\n* <B>改訂履歴：</B>\n* <!-- ------------------------------------ START OF 改訂履歴 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}、新規作成\n* <!-- ------------------------------------ END OF 改訂履歴 -->\n* </PRE>\n*/\n@Slf4j\n@Component\npublic class {{className name}}Logic {\n\n    /** {{name}}のDAO */\n    @Autowired\n    private {{className name}}Dao {{camelcase name}}Dao;\n\n    @Autowired\n    private MessageSource messages;\n\n    {{#each apiList}}\n    /**\n    * {{this.description}}\n    */\n    public {{#if (gtLength this.res.model 0)}}{{this.res.name}}{{else}}void{{/if}} {{camelcase this.path}}({{this.req.name}} request) {\n        {{#if (gtLength this.res.model 0)}}return null;{{/if}}\n    }\n    {{/each}}\n\n}\n"
        },
        {
            "name": "dto",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/model/{{name}}/{{model.name}}.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\npackage {{packageName}}.model.{{name}};\n\nimport lombok.Getter;\nimport lombok.Setter;\n\n/**\n* {{model.description}}\n*\n* <PRE>\n* <B>作成：</B>\n* <!-- ------------------------------ START OF 作成 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}\n* <!-- ------------------------------ END OF 作成 -->\n* <B>改訂履歴：</B>\n* <!-- ------------------------------------ START OF 改訂履歴 -->\n* {{replace dateNow \"-\" \"/\"}}、{{userName}}、新規作成\n* <!-- ------------------------------------ END OF 改訂履歴 -->\n* </PRE>\n*/\n@Getter\n@Setter\npublic class {{model.name}} {\n    {{#each model.model}}\n    /**\n    * {{this.columnName}}\n    */{{#each model.model.validations}}\n    {{this}}{{/each}}\n    private {{this.javaType}} {{camelcase this.columnId}};\n\n    {{/each}}\n}\n"
        },
        {
            "name": "UT",
            "content": "src/main/java/{{replace packageName \".\" \"/\"}}/controller/{{className name}}Tests.java--\n/**\n* Copyright © by acoda. All Rights Reserved.\n**/\npackage {{packageName}}.controller;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\nimport org.springframework.http.HttpEntity;\nimport org.springframework.http.HttpHeaders;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.web.client.RestTemplate;\n\nimport {{packageName}}.utils.CSVUtils;\nimport {{packageName}}.utils.JSONUtils;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@RunWith(SpringRunner.class)\n@SpringBootTest(webEnvironment = WebEnvironment.DEFINED_PORT)\npublic class {{className name}}Tests {\n\n    @Before\n    public void setUp() throws URISyntaxException {\n        CSVUtils.getTableInfo();\n    }\n\n    {{#each testList}}\n    @Test\n    public void {{this.name}}() throws URISyntaxException, IOException {\n        // start import data test\n        {{#each this.datatestInput}}\n        CSVUtils.importCsv(\"src\\test\\resources\\datatests\\\\{{../../name}}\\\\{{../this.name}}\\\\{{this}}\");{{/each}}\n        // end start import data test\n\n        RestTemplate restTemplate = new RestTemplate();\n\n        String baseUrl = \"http://localhost:8080\" + \"/{{this.url}}\";\n        URI uri = new URI(baseUrl);\n        {{#if (eq this.type 'GET')}}\n        ResponseEntity<String> result = restTemplate.getForEntity(uri, String.class);\n        {{else}}\n        ObjectMapper mapper = new ObjectMapper();\n        Demo002002Request requestObj = mapper.readValue(\n            new File(\"src\\test\\resources\\datatests\\\\{{../name}}\\\\{{this.name}}\\request.json\"), Demo002002Request.class);\n\n        HttpHeaders headers = new HttpHeaders();\n        headers.setContentType(MediaType.APPLICATION_JSON);\n\n        HttpEntity<Demo002002Request> request = new HttpEntity<>(requestObj, headers);\n        ResponseEntity<String> result = restTemplate.postForEntity(uri, request, String.class);\n        {{/if}}\n        // Verify request succeed\n        Assert.assertEquals(200, result.getStatusCodeValue());\n        System.out.println(result.getBody());\n        Assert.assertTrue(JSONUtils.compareCsv(\n                new File(\"src\\test\\resources\\datatests\\\\{{../name}}\\\\{{this.name}}\\response.json\"), result.getBody()));\n\n        // start compare export data vs expect data\n        {{#each this.datatestOutput}}\n        CSVUtils.exportCsv(\"src\\temp\", \"{{this.table}}\");\n        Assert.assertTrue(CSVUtils.compareCsv(\"src\\temp\", \"{{this.table}}\",\n                \"src\\test\\resources\\datatests\\\\{{../../name}}\\\\{{../name}}\\\\{{this}}\"));{{/each}}\n        // end compare export data vs expect data\n    }\n    {{/each}}\n}\n"
        },
        {
            "name": "README.md",
            "content": "# Spring API"
        }
    ]
}